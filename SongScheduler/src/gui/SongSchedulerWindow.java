/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SongSchedulerWindow.java
 *
 * Created on May 13, 2009, 8:25:59 PM
 */

package gui;

import datechooser.model.multiple.Period;
import java.sql.Time;
import datechooser.model.multiple.PeriodSet;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Iterator;
/**
 *
 * @author kurtisschmidt
 */
public class SongSchedulerWindow extends javax.swing.JFrame {

    /** Creates new form SongSchedulerWindow */
    public SongSchedulerWindow() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        calendar = new datechooser.beans.DateChooserPanel();
        makeListButton = new javax.swing.JButton();
        viewSelectedButton = new javax.swing.JButton();
        MenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        fileMenuOpen = new javax.swing.JMenuItem();
        fileMenuClose = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        calendar.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    calendar.setWeekStyle(datechooser.view.WeekDaysStyle.FULL);
    calendar.setLocale(new java.util.Locale("en", "", ""));
    calendar.addCommitListener(new datechooser.events.CommitListener() {
        public void onCommit(datechooser.events.CommitEvent evt) {
            calendarOnCommit(evt);
        }
    });
    calendar.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
        public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
            calendarOnSelectionChange(evt);
        }
    });

    makeListButton.setText("Make List");

    viewSelectedButton.setText("View Selected");
    viewSelectedButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            viewSelectedButtonMouseClicked(evt);
        }
    });

    fileMenu.setText("File");

    fileMenuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.META_MASK));
    fileMenuOpen.setText("Open");
    fileMenu.add(fileMenuOpen);

    fileMenuClose.setText("Close");
    fileMenuClose.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            fileMenuCloseActionPerformed(evt);
        }
    });
    fileMenu.add(fileMenuClose);

    MenuBar.add(fileMenu);

    setJMenuBar(MenuBar);

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
        .add(layout.createSequentialGroup()
            .addContainerGap()
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(makeListButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 147, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(viewSelectedButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 147, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(calendar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 624, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
        .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .add(calendar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 475, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(makeListButton)
                .add(viewSelectedButton))
            .addContainerGap())
    );

    pack();
    }//GEN-END:initComponents

    private void fileMenuCloseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fileMenuCloseActionPerformed
    {//GEN-HEADEREND:event_fileMenuCloseActionPerformed
        System.exit(0);
}//GEN-LAST:event_fileMenuCloseActionPerformed

    private void calendarOnCommit(datechooser.events.CommitEvent evt)//GEN-FIRST:event_calendarOnCommit
    {//GEN-HEADEREND:event_calendarOnCommit
        // TODO add your handling code here:
        openSelectedDates();
    }//GEN-LAST:event_calendarOnCommit

    private void calendarOnSelectionChange(datechooser.events.SelectionChangedEvent evt)//GEN-FIRST:event_calendarOnSelectionChange
    {//GEN-HEADEREND:event_calendarOnSelectionChange
        // TODO: Update hourScrollPanelList with the hours form that
        // day, highlighting ones which are already populated.
//        hourScrollPanelList.setListData( new Object[]
//                            { new Time(0,0,0),  new Time(1,0,0),  new Time(2,0,0),
//                              new Time(3,0,0),  new Time(4,0,0),  new Time(5,0,0),
//                              new Time(6,0,0),  new Time(7,0,0),  new Time(8,0,0),
//                              new Time(9,0,0),  new Time(10,0,0), new Time(11,0,0),
//                              new Time(12,0,0), new Time(13,0,0), new Time(14,0,0),
//                              new Time(15,0,0), new Time(16,0,0), new Time(17,0,0),
//                              new Time(18,0,0), new Time(19,0,0), new Time(20,0,0),
//                              new Time(21,0,0), new Time(22,0,0), new Time(23,0,0)});
    }//GEN-LAST:event_calendarOnSelectionChange

    private void viewSelectedButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewSelectedButtonMouseClicked
        openSelectedDates();
    }//GEN-LAST:event_viewSelectedButtonMouseClicked

    private void openSelectedDates()
    {
        // TODO add your handling code here:
        Iterator<Calendar> itterator = calendar.getSelectedPeriodSet().getDates().iterator();
        Calendar date;
        int day;
        int month;
        int year;
        String[] temp;
        String[] days = new String[0];
        String tabDay;

        System.out.println("Button Clicked");

        while( itterator.hasNext() ){
            date = itterator.next();
            day = date.get(Calendar.DAY_OF_MONTH);
            month = date.get(Calendar.MONTH) + 1;
            year = date.get(Calendar.YEAR);

            tabDay = day + "/" + month + "/" + year;
            temp = new String[days.length + 1];
            for ( int i = 0; i < days.length; i++ ){
                temp[i] = days[i];
            }
            temp[days.length] = tabDay;
            days = temp;
        }

        new SchedulerListWindow( days, this ).setVisible(true);
        this.setVisible(false);

//        for ( int i = 0; i < days.length; i++ ){
//            System.out.println(days[i]);
//        }
    }
    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SongSchedulerWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MenuBar;
    private datechooser.beans.DateChooserPanel calendar;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem fileMenuClose;
    private javax.swing.JMenuItem fileMenuOpen;
    private javax.swing.JButton makeListButton;
    private javax.swing.JButton viewSelectedButton;
    // End of variables declaration//GEN-END:variables

}
